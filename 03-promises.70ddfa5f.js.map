{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA2EA,SAASC,GAAcC,MAACA,EAAKC,WAAEA,IAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,MAACH,E,WAAOC,IAEhBG,EAAO,C,MAACJ,E,WAAOC,GAAY,GAE5BA,EAAW,G,EAnCL,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,MAACA,EAAKC,KAAEA,EAAIC,OAAEA,GAAUJ,EAAEK,OAChC,IAAIC,GAAcJ,EAAMK,MACxB,MAAMC,GAAaL,EAAKI,MAClBE,GAAeL,EAAOG,MAE5B,IAAI,IAAIG,EAAQ,EAAGA,EAAQD,EAAaC,IACtCxB,EAAc,CAACC,MAAOuB,EAAQ,EAAGtB,WAAAkB,IAChCK,MAAK,EAACxB,MAACA,EAAKC,WAAEA,MACbJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAcC,MAAe,IAElE0B,OAAM,KACL9B,EAAA4B,OAAOG,QAAQ,sBAAoBL,QAAYJ,MAAe,IAEhEA,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n// const refs = {\n//   delay: document.querySelector('input[name=\"delay\"]'),\n//   step: document.querySelector('input[name=\"step\"]'),\n//   amount: document.querySelector('input[name=\"amount\"]'),\n//   form: document.querySelector('.form'),\n//   btn:  document.querySelector('.form > button'),\n// }\n\n// // refs.btn.addEventListener('click', onBtnClick);\n// refs.form.addEventListener('input', onFormInput);\n// refs.form.addEventListener('submit', onFormSubmit);\n\n// function onFormInput(e){};\n\n// function onFormSubmit(e){\n//   e.preventDefault();\n//   let inputDelay = refs.delay.value;\n//   const inputStep = refs.step.value;\n//   const inputAmount = refs.amount.value;\n//   let intervalCounter = 0;\n\n//   const intervalId = setInterval(() => {\n//     intervalCounter += 1;\n//     inputDelay += inputStep;\n    \n//     if(intervalCounter >= inputAmount){\n//       clearInterval(intervalId);\n//     }\n\n//     createPromise({intervalCounter, inputDelay})\n\n//   }, inputDelay);\n// };\n\n// function createPromise({intervalCounter, inputDelay}) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     Notify.success(`✅ Fulfilled promise ${intervalCounter} in ${inputDelay}ms`);\n//     console.log(`✅ Fulfilled promise ${intervalCounter} in ${inputDelay}ms`);\n//   } else {\n//     Notify.failure('`❌ Rejected promise ${intervalCounter} in ${inputDelay}ms`');\n//     console.log(`❌ Rejected promise ${intervalCounter} in ${inputDelay}ms`)\n//   }\n// };\n\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e){\n  e.preventDefault();\n\n  const {delay, step, amount} = e.target;\n  let inputDelay = +delay.value;\n  const inputStep = +step.value;\n  const inputAmount = +amount.value;\n  \n  for(let index = 0; index < inputAmount; index++){\n    createPromise({index: index + 1, inputDelay})\n    .then(({index, inputDelay})=> {\n      Notify.success(`✅ Fulfilled promise ${index} in ${inputDelay}ms`)\n    })\n    .catch(() => {\n      Notify.failure(`❌ Rejected promise ${index} in ${inputDelay}ms`);\n    });\n    inputDelay += inputStep;\n  }\n};\n\nfunction createPromise({index, inputDelay}) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({index, inputDelay});\n      } else {\n        reject({index, inputDelay});\n      }\n    }, inputDelay);\n  });\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","index","inputDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay","step","amount","target","inputDelay1","value","inputStep","inputAmount","index1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.70ddfa5f.js.map"}