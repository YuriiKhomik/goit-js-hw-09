{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UAiDa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,G,kBAoBtB,IAAuBC,EAACC,EAAOC,GAARF,EAXL,CAACC,MAAOE,EAAQ,EAAGD,WAAAE,GAWbH,EAADD,EAACC,MAAOC,EAARF,EAAQE,WACtB,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACL,QAAOC,eAEhBK,EAAO,CAACN,QAAOC,c,GAEhBA,E,KAnBFU,MAAK,SAAAZ,G,IAAEC,EAAKD,EAALC,MAAOC,EAAUF,EAAVE,WACbT,EAAAoB,OAAOC,QAAQ,uBAAqCC,OAAZd,EAAM,QAAiBc,OAAXb,EAAW,M,IAEhEc,OAAM,WACLvB,EAAAoB,OAAOI,QAAQ,sBAAkCF,OAAZZ,EAAM,QAAiBY,OAAXX,EAAW,M,IAE9DA,GAAcc,C,EAfhBnB,EAAEoB,iBAOF,IALA,IAA8BC,EAAArB,EAAEsB,OAAzBC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OAChBpB,GAAckB,EAAMG,MAClBP,GAAaK,EAAKE,MAClBC,GAAeF,EAAOC,MAEpBE,EAAQ,EAAGA,EAAQD,EAAaC,IAAOC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n// const refs = {\n//   delay: document.querySelector('input[name=\"delay\"]'),\n//   step: document.querySelector('input[name=\"step\"]'),\n//   amount: document.querySelector('input[name=\"amount\"]'),\n//   form: document.querySelector('.form'),\n//   btn:  document.querySelector('.form > button'),\n// }\n\n// // refs.btn.addEventListener('click', onBtnClick);\n// refs.form.addEventListener('input', onFormInput);\n// refs.form.addEventListener('submit', onFormSubmit);\n\n// function onFormInput(e){};\n\n// function onFormSubmit(e){\n//   e.preventDefault();\n//   let inputDelay = refs.delay.value;\n//   const inputStep = refs.step.value;\n//   const inputAmount = refs.amount.value;\n//   let intervalCounter = 0;\n\n//   const intervalId = setInterval(() => {\n//     intervalCounter += 1;\n//     inputDelay += inputStep;\n    \n//     if(intervalCounter >= inputAmount){\n//       clearInterval(intervalId);\n//     }\n\n//     createPromise({intervalCounter, inputDelay})\n\n//   }, inputDelay);\n// };\n\n// function createPromise({intervalCounter, inputDelay}) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     Notify.success(`✅ Fulfilled promise ${intervalCounter} in ${inputDelay}ms`);\n//     console.log(`✅ Fulfilled promise ${intervalCounter} in ${inputDelay}ms`);\n//   } else {\n//     Notify.failure('`❌ Rejected promise ${intervalCounter} in ${inputDelay}ms`');\n//     console.log(`❌ Rejected promise ${intervalCounter} in ${inputDelay}ms`)\n//   }\n// };\n\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e){\n  e.preventDefault();\n\n  const {delay, step, amount} = e.target;\n  let inputDelay = +delay.value;\n  const inputStep = +step.value;\n  const inputAmount = +amount.value;\n  \n  for(let index = 0; index < inputAmount; index++){\n    createPromise({index: index + 1, inputDelay})\n    .then(({index, inputDelay})=> {\n      Notify.success(`✅ Fulfilled promise ${index} in ${inputDelay}ms`)\n    })\n    .catch(() => {\n      Notify.failure(`❌ Rejected promise ${index} in ${inputDelay}ms`);\n    });\n    inputDelay += inputStep;\n  }\n};\n\nfunction createPromise({index, inputDelay}) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({index, inputDelay});\n      } else {\n        reject({index, inputDelay});\n      }\n    }, inputDelay);\n  });\n};"],"names":["$h6c0i","parcelRequire","form","document","querySelector","addEventListener","e","param","index","inputDelay","index1","inputDelay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","concat","catch","failure","inputStep","preventDefault","_target","target","delay","step","amount","value","inputAmount","index11","_loop"],"version":3,"file":"03-promises.f02c694a.js.map"}